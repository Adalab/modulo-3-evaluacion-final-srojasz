{"version":3,"sources":["images/noresults.jpg","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharactersList.js","components/CharacterDetail.js","components/App.js","api/fetchCharacters.js","index.js"],"names":["module","exports","className","src","alt","Filters","props","console","log","action","method","htmlFor","type","placeholder","value","search","onChange","ev","inputValue","target","handleSearch","CharacterCard","id","img","name","specie","route","Fragment","to","title","CharactersList","characters","length","noresults","map","character","key","image","species","CharacterDetail","episode","location","status","App","state","bind","renderCharacterDetail","this","setState","inputText","filter","toLowerCase","includes","fetch","then","response","json","responseData","results","routeId","parseInt","match","params","selectedCharacter","find","undefined","Header","exact","path","filterSearch","render","React","Component","ReactDOM","document","getElementById"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,uC,0MCI5B,aAIb,OACE,4BAAQC,UAAU,qCAChB,yBAAKA,UAAU,YAAYC,IAJlB,qGAI6BC,IAAI,0CC0BjCC,EAjCC,SAACC,GASf,OARAC,QAAQC,IAAIF,GASV,0BACEG,OAAO,GACPC,OAAO,GACPR,UAAU,kEACV,2BACEA,UAAU,OAAOS,QAAQ,UAD3B,2CAIA,2BACET,UAAU,mCACVU,KAAK,OACLC,YAAY,kBACZC,MAAOR,EAAMS,OACbC,SApBN,SAAsBC,GACpB,IAAMC,EAAaD,EAAGE,OAAOL,MAC7BR,EAAMc,aAAaF,QCuCRG,EA1CO,SAACf,GAAW,IAExBgB,EAA0BhB,EAA1BgB,GAAIC,EAAsBjB,EAAtBiB,IAAKC,EAAiBlB,EAAjBkB,KAAMC,EAAWnB,EAAXmB,OACjBC,EAAK,qBAAiBJ,GAG5B,OACE,kBAAC,IAAMK,SAAP,KACE,yBACEzB,UAAU,sBACVC,IAAKoB,EACLnB,IAAG,+BAA0BoB,KAC/B,wBAAItB,UAAU,0CAA2CsB,GACzD,uBAAGtB,UAAU,cACC,UAAXuB,EACG,qCAAU,uBAAGvB,UAAU,iBACvB,mDAMN,kBAAC,IAAD,CAAM0B,GAAIF,GACR,4BACExB,UAAU,sCACV2B,MAAM,6CAFR,kB,iBCmBOC,MA1Cf,SAAwBxB,GAEtB,OAAgC,IAA5BA,EAAMyB,WAAWC,OAEjB,6BAAS9B,UAAU,gEACnB,wBAAIA,UAAU,oBAAd,8CAEA,wBAAIA,UAAU,QAAd,2CACA,yBAAKA,UAAU,sBACfC,IAAK8B,IAAW7B,IAAI,6DAOf,wBAAIF,UAAU,yCAClBI,EAAMyB,WAAWG,KAAI,SAACC,GAAD,OACpB,wBACEjC,UAAU,wFAIVkC,IAAKD,EAAUb,IACf,kBAAC,EAAD,CACEC,IAAKY,EAAUE,MACfb,KAAMW,EAAUX,KAChBC,OAAQU,EAAUG,QAClBhB,GAAIa,EAAUb,WC0BXiB,EAvDS,SAACjC,GAAW,IAAD,EAE2BA,EAAM6B,UAA1DE,EAFyB,EAEzBA,MAAOb,EAFkB,EAElBA,KAAMc,EAFY,EAEZA,QAASE,EAFG,EAEHA,QAASC,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,OAgBjD,OACE,yBAAKxC,UAAU,sFAIb,yBACEA,UAAU,yDACVC,IAAKkC,EACLjC,IAAG,+BAA0BoB,KAE/B,2BAAOtB,UAAU,kEACf,wBAAIA,UAAU,cAAesB,GAE7B,qCACA,uBAAGtB,UAAS,yBA1BD,UAAXwC,EAEK,WAEa,SAAXA,EACF,cAEA,yBAqBL,2BACe,UAAZJ,EACG,uCAAY,uBAAGpC,UAAU,kBACzB,sDAGN,uBAAGA,UAAU,eAAb,mBAAwCuC,EAASjB,OACjD,mDAAkBgB,EAAQR,UAE5B,kBAAC,IAAD,CAAMH,MAAM,oBAAoB3B,UAAU,0EAA0E0B,GAAG,KAAI,uBAAG1B,UAAU,gCC+C/HyC,E,YApFb,WAAYrC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDsC,MAAQ,CACX7B,OAAQ,GACRgB,WAAY,IAGd,EAAKX,aAAe,EAAKA,aAAayB,KAAlB,gBACpB,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBATZ,E,0EAcN3B,GACX6B,KAAKC,SAAS,CACZjC,OAAQG,M,qCAWV,IAAMa,EAAagB,KAAKH,MAAMb,WACxBkB,EAAYF,KAAKH,MAAM7B,OAE7B,OAAOgB,EAAWmB,QAAO,SAAAf,GAAS,OAAIA,EAAUX,KAAK2B,cAAcC,SAASH,EAAUE,oB,0CAKnE,IAAD,OC5CbE,MAAM,8CACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAY,OAAIA,EAAaC,WD2CjBJ,MAAK,SAAAvB,GAAU,OAAI,EAAKiB,SAAS,CAAEjB,oB,4CAKjCzB,GAEpB,IAAMqD,EAAUC,SAAStD,EAAMuD,MAAMC,OAAOxC,IAEtCyC,EAAoBhB,KAAKH,MAAMb,WAAWiC,MAAK,SAAA7B,GAAS,OAAIA,EAAUb,KAAOqC,KACnF,YAA0BM,IAAtBF,EACK,wBAAI7D,UAAU,oBAAd,2BAOL,kBAAE,EAAF,CAAkBiC,UAAW4B,M,+BAOjC,OADAxD,QAAQC,IAAIuC,KAAKH,MAAMb,YAErB,yBAAK7B,UAAU,kBACb,kBAAEgE,EAAF,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAE,EAAF,CACErD,OAAQgC,KAAKH,MAAM7B,OACnBK,aAAc2B,KAAK3B,eAErB,kBAAE,EAAF,CACEW,WAAYgB,KAAKsB,kBAErB,kBAAC,IAAD,CACED,KAAK,iBACLE,OAAQvB,KAAKD,8B,GA9EPyB,IAAMC,WEFxBC,IAASH,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OACaI,SAASC,eAAe,W","file":"static/js/main.1bdbc8ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noresults.81bfd7c0.jpg\";","import React from 'react'\n\n\n\nexport default () => {\n\n  const logo = \"https://help.redbubble.com/hc/article_attachments/360002309526/Rick_and_Morty_-_logo__English_.png\";\n\n  return (\n    <header className=\"d-flex justify-content-center m-5\">\n      <img className=\"img-fluid\" src={logo} alt=\"Cabecera de la serie Rick and Morty\" />\n    </header>\n  )\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n  console.log(props);\n\n  function handleSearch(ev) {\n    const inputValue = ev.target.value;\n    props.handleSearch(inputValue);\n\n  }\n\n  return (\n    <form\n      action=\"\"\n      method=\"\"\n      className=\"form-inline mb-5 d-flex justify-content-center align-items-end\">\n      <label\n        className=\"mb-2\" htmlFor=\"search\">\n        Â¿QuÃ© personaje estÃ¡s buscando?\n      </label>\n      <input\n        className=\"form-control ml-2 mt-3 text-left\"\n        type=\"text\"\n        placeholder=\"Ej.Summer Smith\"\n        value={props.search}\n        onChange={handleSearch}\n      />\n    </form >\n  )\n}\n\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n}\n\nexport default Filters;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst CharacterCard = (props) => {\n\n  const { id, img, name, specie } = props;\n  const route = `/character/${id}`\n\n\n  return (\n    <React.Fragment>\n      <img\n        className=\"img-fluid mt-3 mb-3\"\n        src={img}\n        alt={`Imagen del personaje ${name}`} />\n      <h5 className=\"card-title text-white font-weight-bold\" >{name}</h5>\n      <p className=\"text-white\">\n        {specie === \"Human\"\n          ? <p>Humano <i className=\"fas fa-user\"></i></p>\n          : <p>Alien ðŸ‘½ </p>\n        }\n      </p>\n\n\n\n      <Link to={route}>\n        <button\n          className=\"btn btn-light btn-outline-secondary\"\n          title=\"Pincha para conocer mÃ¡s informaciÃ³n\">\n          MÃ¡s info\n          </button>\n      </Link>\n    </React.Fragment>\n\n  )\n}\nCharacterCard.propTypes = {\n  img: PropTypes.string,\n  name: PropTypes.string,\n  specie: PropTypes.string\n\n\n\n}\n\nexport default CharacterCard;","import React from 'react'\nimport CharacterCard from \"./CharacterCard\";\nimport PropTypes from 'prop-types';\nimport noresults from \"../images/noresults.jpg\";\n\nfunction CharactersList(props) {\n\n  if (props.characters.length === 0) {\n    return (\n      <section className=\"d-flex flex-column justify-content-center align-items-center\">\n      <h4 className=\"text-center mb-1\">Â¡Oh, no! No hemos encontrado resultados\n      </h4>\n      <h5 className=\"mb-5\">Â¿Por quÃ© no lo intentas otra vez?</h5>\n      <img className=\"img-fluid w-75 mb-5\"\n      src={noresults} alt=\"Imagen de los protagonistas de Rick and Morty asustados\" />\n      \n      </section>\n    )\n\n  } else {\n\n    return <ul className=\"col-center row justify-content-center\">\n      {props.characters.map((character) =>\n        <li\n          className=\"card  \n          bg-info m-2 col-6 col-sm-3 col-md-3 col-lg-2\n            border-secondary pb-3\n          text-center\"\n          key={character.id}>\n          <CharacterCard\n            img={character.image}\n            name={character.name}\n            specie={character.species}\n            id={character.id}\n          />\n\n        </li>\n      )\n      }\n    </ul >\n  }\n}\n\nCharactersList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default CharactersList;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = (props) => {\n\n  const { image, name, species, episode, location, status } = props.character;\n\n  const speciesClass = () => {\n\n    if (status === \"Alive\") {\n\n      return \"fa-heart\"\n\n    } else if (status === \"Dead\") {\n      return \"fas fa-male\"\n    } else {\n      return \"fa-question-circle\"\n    }\n\n\n  }\n  return (\n    <div className=\"d-flex justify-content-center rounded bg-info align-items-center text-white col-12\">\n\n\n\n      <img\n        className=\"img-fluid ard-img-top w-25 m-3 col-4 col-md-5 col-lg-3\"\n        src={image}\n        alt={`Imagen del personaje ${name}`} />\n\n      <aside className=\"card-body d-flex flex-column ustify-content-end text-left info\">\n        <h5 className=\"card-title\" >{name}</h5>\n\n        <p>Estado:\n        <i className={`text-danger fa ${speciesClass()}`}></i>\n        </p>\n        <p>\n          {species === \"Human\"\n            ? <p>Especie: <i className=\"fas fa-user \"></i></p>\n            : <p>Especie: ðŸ‘½ </p>\n          }\n        </p>\n        <p className=\"line-height\">{`Planeta: ${location.name}`}</p>\n        <p>{`CapÃ­tulos: ${episode.length}`}</p>\n      </aside>\n      <Link title=\"Vuelve al listado\" className=\"rounded align-self-start justify-content-start m-1 p-3 badge badge-info\" to=\"/\"><i className=\"fas fa-arrow-circle-left\"></i>\n      </Link>\n    </div>\n\n  )\n}\n\nCharacterDetail.propTypes = {\n\n  characters: PropTypes.object\n\n}\nexport default CharacterDetail;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport fetchCharacters from '../api/fetchCharacters';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharactersList from './CharactersList';\nimport CharacterDetail from './CharacterDetail';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      characters: []\n    }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  //events\n\n  handleSearch(inputValue) {\n    this.setState({\n      search: inputValue\n    })\n  }\n\n\n\n\n\n  // helpers\n\n  filterSearch() {\n    const characters = this.state.characters;\n    const inputText = this.state.search;\n\n    return characters.filter(character => character.name.toLowerCase().includes(inputText.toLowerCase()))\n\n  }\n\n  // fetch\n  componentDidMount() {\n    fetchCharacters().then(characters => this.setState({ characters }));\n  }\n\n  // render(\n\n  renderCharacterDetail(props) {\n\n    const routeId = parseInt(props.match.params.id);\n\n    const selectedCharacter = this.state.characters.find(character => character.id === routeId)\n    if (selectedCharacter === undefined) {\n      return <h4 className=\"text-center mb-1\">\n        Personaje no encontrado\n        </h4>\n    } else {\n\n      return (\n\n        < CharacterDetail character={selectedCharacter} />\n      );\n    }\n  }\n\n  render() {\n    console.log(this.state.characters)\n    return (\n      <div className=\"background m-2\">\n        < Header\n        />\n\n        <Switch>\n          <Route exact path='/'>\n            < Filters\n              search={this.state.search}\n              handleSearch={this.handleSearch}\n            />\n            < CharactersList\n              characters={this.filterSearch()} />\n          </Route>\n          <Route\n            path='/character/:id'\n            render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default () => {\n  return fetch('https://rickandmortyapi.com/api/character/')\n    .then(response => response.json())\n    .then(responseData => responseData.results)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport \"./stylesheets/index.scss\";\nimport App from './components/App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}
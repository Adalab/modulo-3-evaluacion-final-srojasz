{"version":3,"sources":["components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharactersList.js","components/CharacterDetail.js","components/App.js","api/fetchCharacters.js","index.js"],"names":["src","alt","Filters","props","console","log","htmlFor","type","placeholder","onChange","ev","inputValue","target","value","handleSearch","CharacterCard","id","img","name","specie","route","to","CharactersList","characters","length","map","character","key","image","species","CharacterDetail","episode","location","status","App","state","search","bind","renderCharacterDetail","this","setState","inputText","filter","toLowerCase","includes","fetch","then","response","json","responseData","results","routeId","parseInt","match","params","selectedCharacter","find","undefined","Header","exact","path","filterSearch","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f2899bdf.chunk.js","sourcesContent":["import React from 'react'\n\n\n\nexport default () => {\n\n  const logo = \"https://help.redbubble.com/hc/article_attachments/360002309526/Rick_and_Morty_-_logo__English_.png\";\n\n  return (\n    <header>\n\n      <img src={logo} alt=\"Cabecera de la serie Rick and Morty\" />\n\n\n\n    </header>\n  )\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n  console.log(props);\n\n  function handleSearch(ev) {\n    const inputValue = ev.target.value;\n    props.handleSearch(inputValue);\n\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"search\">\n        Â¿QuÃ© personaje estÃ¡s buscando?\n      </label>\n      <input\n        type=\"text\"\n        placeholder=\"Ej.Summer Smith\"\n        onChange={handleSearch}\n      />\n    </form>\n  )\n}\n\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n}\n\nexport default Filters;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst CharacterCard = (props) => {\n  console.log(props);\n  const { id, img, name, specie } = props;\n  const route = `/character/${id}`\n  return (\n    <Link to={route}>\n      <div>\n        <img\n          src={img}\n          alt={`Imagen del personaje ${name}`} />\n        <h2>{name}</h2>\n        <p>{specie === \"Human\" ? \"Especie ðŸ‘¤\" : \"Especie: ðŸ‘½\"}</p>\n\n      </div>\n    </Link>\n  )\n}\nCharacterCard.propTypes = {\n  img: PropTypes.string,\n  name: PropTypes.string,\n  specie: PropTypes.string\n\n\n\n}\n\nexport default CharacterCard;","import React from 'react'\nimport CharacterCard from \"./CharacterCard\";\nimport PropTypes from 'prop-types';\n\nfunction CharactersList(props) {\n\n  if (props.characters.length === 0) {\n    return (\n      <p>Lo siento, no hemos encontrado resultados</p>\n    )\n\n  } else {\n\n    return <ul>\n      {props.characters.map((character) =>\n        <li key={character.id}>\n          <CharacterCard\n            img={character.image}\n            name={character.name}\n            specie={character.species}\n            id={character.id}\n          />\n\n        </li>\n      )\n      }\n    </ul >\n  }\n}\n\nCharactersList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default CharactersList;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = (props) => {\n\n  const { image, name, species, episode, location, status } = props.character;\n\n  return (\n    <div>\n      <img\n        src={image}\n        alt={`Imagen del personaje ${name}`} />\n      <Link to=\"/\">\n        <button>Volver al listado</button>\n      </Link>\n      <h2>{name}</h2>\n      <p>{status === \"Alive\" ? \"Estado ðŸ’“ \" : \"Estado ðŸ’”\"}</p>\n      <p>{species === \"Human\" ? \"Especie ðŸ‘¤\" : \"Especie: ðŸ‘½\"}</p>\n      <p>{`Planeta: ${location.name}`}</p>\n      <p>{`CapÃ­tulos: ${episode.length}`}</p>\n\n    </div>\n  )\n}\n\nCharacterDetail.propTypes = {\n\n  characters: PropTypes.object\n\n}\nexport default CharacterDetail;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport fetchCharacters from '../api/fetchCharacters';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharactersList from './CharactersList';\nimport CharacterDetail from './CharacterDetail';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      characters: []\n    }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  //events\n\n  handleSearch(inputValue) {\n    this.setState({\n      search: inputValue\n    })\n  }\n\n\n\n\n\n  // helpers\n\n  filterSearch() {\n    const characters = this.state.characters;\n    const inputText = this.state.search;\n    if (!inputText) {\n      return characters\n    } else {\n      return characters.filter(character => character.name.toLowerCase().includes(inputText.toLowerCase()))\n    }\n  }\n\n  // fetch\n  componentDidMount() {\n    fetchCharacters().then(characters => this.setState({ characters }));\n  }\n\n  // render(\n\n  renderCharacterDetail(props) {\n\n    const routeId = parseInt(props.match.params.id);\n\n    const selectedCharacter = this.state.characters.find(character => character.id === routeId)\n    if (selectedCharacter === undefined) {\n      return <p>\n        Personaje no encontrado\n        </p>\n    } else {\n\n      return (\n\n        < CharacterDetail character={selectedCharacter} />\n      );\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        < Header\n        />\n        < Filters\n          handleSearch={this.handleSearch}\n        />\n        <Switch>\n          <Route exact path='/'>\n            < CharactersList\n              characters={this.filterSearch()} />\n          </Route>\n          <Route\n            path='/character/:id'\n            render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default () => {\n  return fetch('https://rickandmortyapi.com/api/character/')\n    .then(response => response.json())\n    .then(responseData => responseData.results)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport \"./stylesheets/index.css\";\nimport App from './components/App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}